buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "org.grails.plugins:views-gradle:1.1.6"
        classpath 'org.grails.plugins:database-migration:3.0.3'
    }
}

version "$appVersion"
group "com.k_int.folio"

apply plugin:"eclipse"
apply plugin:"idea"
//apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"

springBoot {
  // Enable the creation of a fully
  // executable archive file.
  executable = true
  embeddedLaunchScriptProperties = [
    'inlinedConfScript': 'spring-boot.conf'
  ]
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    compile 'org.grails.plugins:database-migration:3.0.3'
    compile 'org.liquibase:liquibase-core:3.5.3'
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime 'postgresql:postgresql:9.1-901-1.jdbc4'
    runtime "org.apache.tomcat:tomcat-jdbc"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testCompile "org.grails:grails-web-testing-support"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
    
    compile 'org.grails.plugins:spring-security-core:3.2.0'
    
    runtime "org.grails.plugins:async"
    runtime "org.grails.plugins:events"
    
    
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

sourceSets {
    main {
        resources {
            srcDir 'grails-app/migrations'
        }
    }
}

task generateDescriptors(type:Copy) {
  from 'src/okapi'
  into 'build'
  include('*Descriptor*-template.json')
  filteringCharset = 'UTF-8'
  expand(project.properties)
  rename { String fileName ->
    fileName.replace('-template', '')
  }
}

grails {
	plugins {
	  // Local Web Toolkit project.
	  println "Looking for the Web-Toolkit plugin..."
	  def wtp = parent?.subprojects?.find {
  		if (it.name == "kint-web-toolkit") {
  		  compile it
  		  println "\tfound locally at ${it.projectDir}"
  		  return true
  		}
  		false
	  }
	}
}

build.dependsOn generateDescriptors 
assemble.dependsOn generateDescriptors 

